(0 e 0 ((Goal unlock :?chest :?) nil nil) "Hold-chest-to-put-on-floor")
(1 i 1 ((Thing :? :?chest :?surf light) (:?surf) #object[clojure.core$eval3943$fn__3944 0x32bd2c81 "clojure.core$eval3943$fn__3944@32bd2c81"]))
(2 i 2 ((Monkey :?thing :? :?) (:?chest :?thing) #object[clojure.core$eval3947$fn__3948 0x4cd71fac "clojure.core$eval3947$fn__3948@4cd71fac"]))
(3 x 3 (not (Goal hold :?chest :?) nil nil) "Hold-chest-to-put-on-floor" 0 (:?chest) #object[clojure.core$eval3951$fn__3952 0x2aec325e "clojure.core$eval3951$fn__3952@2aec325e"])
(4 e 0 ((Goal unlock :?chest :?) nil nil) "Put-chest-on-floor")
(5 i 2 ((Monkey :?chest :?place :?on) nil nil))
(6 x 4 ((Thing :? :?chest :? :?) nil nil) "Put-chest-on-floor" 0 (:?chest :?place :?on :?fids) #object[clojure.core$eval3955$fn__3956 0x2c32a32d "clojure.core$eval3955$fn__3956@2c32a32d"])
(7 e 0 ((Goal unlock :?obj :?) nil nil) "Get-key-to-unlock")
(8 i 5 ((Thing :? :?obj floor :?) nil nil))
(9 i 6 ((Chest :? :?obj :?key) nil nil))
(10 i 2 ((Monkey :?thing :? :?) (:?thing :?key) #object[clojure.core$eval3959$fn__3960 0x3414613b "clojure.core$eval3959$fn__3960@3414613b"]))
(11 x 3 (not (Goal hold :?key :?) nil nil) "Get-key-to-unlock" 0 (:?key) #object[clojure.core$eval3963$fn__3964 0x4912ffc4 "clojure.core$eval3963$fn__3964@4912ffc4"])
(12 e 0 ((Goal unlock :?chest :?) nil nil) "Move-to-chest-with-key")
(13 i 2 ((Monkey :?key :?mplace :?) nil nil))
(14 i 5 ((Thing :?cplace :?chest floor :?) (:?cplace :?mplace) #object[clojure.core$eval3967$fn__3968 0x5a9d317a "clojure.core$eval3967$fn__3968@5a9d317a"]))
(15 i 6 ((Chest :? :?chest :?key) nil nil))
(16 x 7 (not (Goal walk-to :?cplace :?) nil nil) "Move-to-chest-with-key" 0 (:?cplace) #object[clojure.core$eval3971$fn__3972 0x126efb07 "clojure.core$eval3971$fn__3972@126efb07"])
(17 e 0 ((Goal unlock :?name :?) nil nil) "Unlock-chest-with-key")
(18 i 6 ((Chest :?contents :?name :?key) nil nil))
(19 i 4 ((Thing :?place :?name :?on :?) nil nil))
(20 x 2 ((Monkey :?key :?place :?on) nil nil) "Unlock-chest-with-key" 0 (:?place :?fids :?contents :?name :?key) #object[clojure.core$eval3975$fn__3976 0x668f5e1e "clojure.core$eval3975$fn__3976@668f5e1e"])
(21 e 3 ((Goal hold :?obj :?) nil nil) "Unlock-chest-to-hold-object")
(22 i 6 ((Chest :?obj :?chest :?) nil nil))
(23 x 0 (not (Goal unlock :?chest :?) nil nil) "Unlock-chest-to-hold-object" 0 (:?chest) #object[clojure.core$eval3979$fn__3980 0x98d4651 "clojure.core$eval3979$fn__3980@98d4651"])
(24 e 3 ((Goal hold :?obj :?) nil nil) "Use-ladder-to-hold")
(25 i 8 ((Thing :?place :?obj ceiling light) nil nil))
(26 i 9 (not (Thing :?place ladder :? :?) nil nil))
(27 x 10 (not (Goal move ladder :?place) nil nil) "Use-ladder-to-hold" 0 (:?place) #object[clojure.core$eval3983$fn__3984 0x3aaeeee4 "clojure.core$eval3983$fn__3984@3aaeeee4"])
(28 e 3 ((Goal hold :?obj :?) nil nil) "Climb-ladder-to-hold")
(29 i 8 ((Thing :?place :?obj ceiling light) nil nil))
(30 i 11 ((Thing :?place ladder floor :?) nil nil))
(31 i 2 ((Monkey :? :? :?s) (:?s) #object[clojure.core$eval3987$fn__3988 0x71bd2f41 "clojure.core$eval3987$fn__3988@71bd2f41"]))
(32 x 12 (not (Goal on ladder :?) nil nil) "Climb-ladder-to-hold" 0 () #object[clojure.core$eval3991$fn__3992 0x3684e0a4 "clojure.core$eval3991$fn__3992@3684e0a4"])
(33 e 3 ((Goal hold :?name :?) nil nil) "Grab-object-from-ladder")
(34 i 8 ((Thing :?place :?name ceiling light) nil nil))
(35 i 9 ((Thing :?place ladder :? :?) nil nil))
(36 x 13 ((Monkey blank :?place ladder) nil nil) "Grab-object-from-ladder" 0 (:?fids :?name) #object[clojure.core$eval3995$fn__3996 0x2e9b2d44 "clojure.core$eval3995$fn__3996@2e9b2d44"])
(37 e 3 ((Goal hold :?obj :?) nil nil) "Climb-to-hold")
(38 i 1 ((Thing :?place :?obj :?on light) (:?on) #object[clojure.core$eval3999$fn__4000 0x3774ed02 "clojure.core$eval3999$fn__4000@3774ed02"]))
(39 i 2 ((Monkey :? :?place :?surf) (:?on :?surf) #object[clojure.core$eval4003$fn__4004 0x9949d4f "clojure.core$eval4003$fn__4004@9949d4f"]))
(40 x 14 (not (Goal on :?on :?) nil nil) "Climb-to-hold" 0 (:?on) #object[clojure.core$eval4007$fn__4008 0xb37a4 "clojure.core$eval4007$fn__4008@b37a4"])
(41 e 3 ((Goal hold :?obj :?) nil nil) "Walk-to-hold")
(42 i 1 ((Thing :?place :?obj :?surf light) (:?surf) #object[clojure.core$eval4011$fn__4012 0x6272a4f4 "clojure.core$eval4011$fn__4012@6272a4f4"]))
(43 i 2 ((Monkey :? :?loc :?) (:?place :?loc) #object[clojure.core$eval4015$fn__4016 0x5d643d8a "clojure.core$eval4015$fn__4016@5d643d8a"]))
(44 x 7 (not (Goal walk-to :?place :?) nil nil) "Walk-to-hold" 0 (:?place) #object[clojure.core$eval4019$fn__4020 0x426d6662 "clojure.core$eval4019$fn__4020@426d6662"])
(45 e 3 ((Goal hold :?obj :?) nil nil) "Drop-to-hold")
(46 i 1 ((Thing :?place :?obj :?on light) nil nil))
(47 i 2 ((Monkey :?hold :?place :?on) (:?hold) #object[clojure.core$eval4023$fn__4024 0x747d7942 "clojure.core$eval4023$fn__4024@747d7942"]))
(48 x 15 (not (Goal hold blank :?) nil nil) "Drop-to-hold" 0 () #object[clojure.core$eval4027$fn__4028 0x2fa6248a "clojure.core$eval4027$fn__4028@2fa6248a"])
(49 e 3 ((Goal hold :?name :?) nil nil) "Grab-object")
(50 i 1 ((Thing :?place :?name :?on light) nil nil))
(51 x 16 ((Monkey blank :?place :?on) nil nil) "Grab-object" 0 (:?fids :?name) #object[clojure.core$eval4031$fn__4032 0x7f91c55a "clojure.core$eval4031$fn__4032@7f91c55a"])
(52 e 15 ((Goal hold blank :?) nil nil) "Drop-object")
(53 i 2 ((Monkey :?name :?place :?on) (:?name) #object[clojure.core$eval4035$fn__4036 0x3aade368 "clojure.core$eval4035$fn__4036@3aade368"]))
(54 x 4 ((Thing :? :?name :? :?) nil nil) "Drop-object" 0 (:?place :?on :?fids :?name) #object[clojure.core$eval4039$fn__4040 0x58d06e5f "clojure.core$eval4039$fn__4040@58d06e5f"])
(55 e 17 ((Goal move :?obj :?place) nil nil) "Unlock-chest-to-move-object")
(56 i 6 ((Chest :?obj :?chest :?) nil nil))
(57 x 0 (not (Goal unlock :?chest :?) nil nil) "Unlock-chest-to-move-object" 0 (:?chest) #object[clojure.core$eval4043$fn__4044 0x115af6b2 "clojure.core$eval4043$fn__4044@115af6b2"])
(58 e 17 ((Goal move :?obj :?place) nil nil) "Hold-object-to-move")
(59 i 1 ((Thing :?loc :?obj :? light) (:?place :?loc) #object[clojure.core$eval4047$fn__4048 0x409ed19b "clojure.core$eval4047$fn__4048@409ed19b"]))
(60 i 2 ((Monkey :?hold :? :?) (:?obj :?hold) #object[clojure.core$eval4051$fn__4052 0x744cfb9b "clojure.core$eval4051$fn__4052@744cfb9b"]))
(61 x 3 (not (Goal hold :?obj :?) nil nil) "Hold-object-to-move" 0 (:?obj) #object[clojure.core$eval4055$fn__4056 0x57cb18cc "clojure.core$eval4055$fn__4056@57cb18cc"])
(62 e 17 ((Goal move :?obj :?place) nil nil) "Move-object-to-place")
(63 i 2 ((Monkey :?obj :?loc :?) (:?place :?loc) #object[clojure.core$eval4059$fn__4060 0x7a46ddf4 "clojure.core$eval4059$fn__4060@7a46ddf4"]))
(64 x 7 (not (Goal walk-to :?place :?) nil nil) "Move-object-to-place" 0 (:?place) #object[clojure.core$eval4063$fn__4064 0x40bc695b "clojure.core$eval4063$fn__4064@40bc695b"])
(65 e 17 ((Goal move :?name :?place) nil nil) "Drop-object-once-moved")
(66 i 2 ((Monkey :?obj :?place :?) nil nil))
(67 x 1 ((Thing :? :?name :? light) nil nil) "Drop-object-once-moved" 0 (:?place :?fids :?name) #object[clojure.core$eval4067$fn__4068 0xc8af12c "clojure.core$eval4067$fn__4068@c8af12c"])
(68 e 17 ((Goal move :?obj :?place) nil nil) "Already-moved-object")
(69 x 4 ((Thing :?place :?obj :? :?) nil nil) "Already-moved-object" 0 (:?fids) #object[clojure.core$eval4071$fn__4072 0x4b6772a7 "clojure.core$eval4071$fn__4072@4b6772a7"])
(70 e 7 ((Goal walk-to :?place :?) nil nil) "Already-at-place")
(71 x 2 ((Monkey :? :?place :?) nil nil) "Already-at-place" 0 (:?fids) #object[clojure.core$eval4075$fn__4076 0x7fc23d57 "clojure.core$eval4075$fn__4076@7fc23d57"])
(72 e 7 ((Goal walk-to :?place :?) nil nil) "Get-on-floor-to-walk")
(73 i 2 ((Monkey :? :?loc :?surf) (:?place :?loc :?surf) #object[clojure.core$eval4079$fn__4080 0x260a0e17 "clojure.core$eval4079$fn__4080@260a0e17"]))
(74 x 18 (not (Goal on floor :?) nil nil) "Get-on-floor-to-walk" 0 () #object[clojure.core$eval4084$fn__4085 0x291ac225 "clojure.core$eval4084$fn__4085@291ac225"])
(75 e 7 ((Goal walk-to :?place :?) nil nil) "Walk-holding-nothing")
(76 x 19 ((Monkey blank :?loc floor) (:?place :?loc) #object[clojure.core$eval4088$fn__4089 0x658cc9d6 "clojure.core$eval4088$fn__4089@658cc9d6"]) "Walk-holding-nothing" 0 (:?place :?fids) #object[clojure.core$eval4092$fn__4093 0x71a6a4d5 "clojure.core$eval4092$fn__4093@71a6a4d5"])
(77 e 7 ((Goal walk-to :?place :?) nil nil) "Walk-holding-object")
(78 x 20 ((Monkey :?obj :?loc floor) (:?place :?obj :?loc) #object[clojure.core$eval4096$fn__4097 0x61637e15 "clojure.core$eval4096$fn__4097@61637e15"]) "Walk-holding-object" 0 (:?place :?obj :?fids) #object[clojure.core$eval4101$fn__4102 0x2184e299 "clojure.core$eval4101$fn__4102@2184e299"])
(79 e 18 ((Goal on floor :?) nil nil) "Jump-onto-floor")
(80 x 2 ((Monkey :? :? :?on) (:?on) #object[clojure.core$eval4105$fn__4106 0x35e4ad78 "clojure.core$eval4105$fn__4106@35e4ad78"]) "Jump-onto-floor" 0 (:?on :?fids) #object[clojure.core$eval4109$fn__4110 0x63367b "clojure.core$eval4109$fn__4110@63367b"])
(81 e 14 ((Goal on :?obj :?) nil nil) "Walk-to-place-to-climb")
(82 i 4 ((Thing :?place :?obj :? :?) nil nil))
(83 i 2 ((Monkey :? :?loc :?) (:?place :?loc) #object[clojure.core$eval4113$fn__4114 0x505c4b82 "clojure.core$eval4113$fn__4114@505c4b82"]))
(84 x 7 (not (Goal walk-to :?place :?) nil nil) "Walk-to-place-to-climb" 0 (:?place) #object[clojure.core$eval4117$fn__4118 0x2fa6ce0e "clojure.core$eval4117$fn__4118@2fa6ce0e"])
(85 e 14 ((Goal on :?obj :?) nil nil) "Drop-to-climb")
(86 i 4 ((Thing :?place :?obj :? :?) nil nil))
(87 i 2 ((Monkey :?hold :?place :?) (:?hold) #object[clojure.core$eval4121$fn__4122 0x7b7b84a4 "clojure.core$eval4121$fn__4122@7b7b84a4"]))
(88 x 15 (not (Goal hold blank :?) nil nil) "Drop-to-climb" 0 () #object[clojure.core$eval4125$fn__4126 0x44ae70d "clojure.core$eval4125$fn__4126@44ae70d"])
(89 e 14 ((Goal on :?obj :?) nil nil) "Climb-indirectly")
(90 i 4 ((Thing :?place :?obj :?on :?) nil nil))
(91 i 16 ((Monkey blank :?place :?on2) (:?on2 :?on :?obj) #object[clojure.core$eval4129$fn__4130 0x7b225fc1 "clojure.core$eval4129$fn__4130@7b225fc1"]))
(92 x 14 (not (Goal on :?on :?) nil nil) "Climb-indirectly" 0 (:?on) #object[clojure.core$eval4134$fn__4135 0x323e3650 "clojure.core$eval4134$fn__4135@323e3650"])
(93 e 14 ((Goal on :?obj :?) nil nil) "Climb-directly")
(94 i 4 ((Thing :?place :?obj :?on :?) nil nil))
(95 x 16 ((Monkey blank :?place :?on) nil nil) "Climb-directly" 0 (:?obj :?fids) #object[clojure.core$eval4138$fn__4139 0x5f863fee "clojure.core$eval4138$fn__4139@5f863fee"])
(96 e 14 ((Goal on :?obj :?) nil nil) "Already-on-object")
(97 x 2 ((Monkey :? :? :?obj) nil nil) "Already-on-object" 0 (:?fids) #object[clojure.core$eval4142$fn__4143 0x161442d9 "clojure.core$eval4142$fn__4143@161442d9"])
(98 e 21 ((Goal eat :?obj :?) nil nil) "Hold-to-eat")
(99 i 2 ((Monkey :?h :? :?) (:?h :?obj) #object[clojure.core$eval4146$fn__4147 0x75624dd2 "clojure.core$eval4146$fn__4147@75624dd2"]))
(100 x 3 (not (Goal hold :?obj :?) nil nil) "Hold-to-eat" 0 (:?obj) #object[clojure.core$eval4150$fn__4151 0x1aa204cb "clojure.core$eval4150$fn__4151@1aa204cb"])
(101 e 21 ((Goal eat :?name :?) nil nil) "Satisfy-hunger")
(102 i 2 ((Monkey :?name :? :?) nil nil))
(103 x 4 ((Thing :? :?name :? :?) nil nil) "Satisfy-hunger" 0 (:?fids :?name) #object[clojure.core$eval4154$fn__4155 0x3910488f "clojure.core$eval4154$fn__4155@3910488f"])
